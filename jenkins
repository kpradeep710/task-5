pipeline {
    agent any

    environment {
        PATH = "$PATH:/C:/Program Files/apache-maven-3.9.3-bin/apache-maven-3.9.3/bin"
        SONARQUBE_SERVER = 'sonar-server-10.6'  // Name of the SonarQube server configured in Jenkins
        NEXUS_URL = 'http://13.233.167.153:8080/repository/maven-releases/'
        NEXUS_CREDENTIALS_ID = '4b3fb957-a0b3-40a2-86f5-8d377c1bf5db'
        EC2_USER = 'ec2-user'
        EC2_HOST = 'ec2-65-1-1-125.ap-south-1.compute.amazonaws.com'
        PEM_FILE_PATH = 'C:/Documents/k.pradeepkumar.pem' // path to .pem file for SSH access to EC2
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/kpradeep710/task-5.git'
            }
        }

        stage('Build on Dynamic Agent') {
            steps {
                // Adjust Maven commands as per project requirements
                bat 'mvn clean package -DskipTests'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv('sonar-server-10.6') { 
                        bat 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                script {
                    nexusArtifactUploader artifacts: [[artifactId: 'app-artifact', 
                        classifier: '', file: 'target/01-maven-web-app.war', 
                        type: 'war']], 
                        credentialsId: "${NEXUS_CREDENTIALS_ID}", 
                        groupId: 'com.example', 
                        nexusUrl: "${NEXUS_URL}", 
                        repository: 'maven-releases', 
                        version: '1.0.0'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(credentials: ['ec2-ssh-credentials']) {
                    // Copy artifact to EC2
                    bat '''
                    scp -o StrictHostKeyChecking=no -i ${PEM_FILE_PATH} target/app.war ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/01-maven-web-app.war
                    '''
                    
                    // Run deployment script on EC2
                    bat '''
                    ssh -o StrictHostKeyChecking=no -i ${PEM_FILE_PATH} ${EC2_USER}@${EC2_HOST} << EOF
                    sudo systemctl stop maven-web-app
                    sudo cp /home/${EC2_USER}/01-maven-web-app.war 
                    sudo systemctl start maven-web-app
                    EOF
                    '''
                }
            }
        }
    }
}
